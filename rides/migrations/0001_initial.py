# Generated by Django 3.1.6 on 2021-03-05 23:44

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_rider', models.BooleanField(default=False)),
                ('is_ex', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('cell', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('wallet', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=120)),
                ('city', models.CharField(max_length=120)),
                ('country', models.CharField(max_length=120)),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Status',
            },
        ),
        migrations.CreateModel(
            name='Executive',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='rides.user')),
                ('shift', models.CharField(choices=[('M', '08:00 - 17:00'), ('E', '16:00 - 01:00'), ('N', '00;00 - 09:00')], max_length=1)),
                ('avg_r', models.DecimalField(decimal_places=1, max_digits=2)),
                ('car', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='rides.cab')),
            ],
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='rides.user')),
            ],
        ),
        migrations.CreateModel(
            name='Rides',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('charges', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('cab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.cab')),
                ('destination', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='rides.place')),
                ('source', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='source', to='rides.place')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.status')),
                ('cabee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.executive')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.rider')),
            ],
            options={
                'verbose_name_plural': 'Rides',
            },
        ),
    ]
